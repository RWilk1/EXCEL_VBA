
txt_Start_Date
img_StartDate
txt_Start_Godz
img_Start_Godz

txt_End_Date
img_EndDate
txt_Koniec_Godz
img_Koniec_Godz

txt_Czas_Trwania

txt_Opis_Utrudnienia
txt_Opis_Utrud_Liczba_Znak

cmd_Zapisz_Nowa_Awarie
cmd_Modyfikacja

cmd_Tryb
img_Tryb_Update
img_Tryb_Insert

txt_ID
txt_Tryb
txt_Uzytkownik

lst_Lista_Awarii

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Data_Start As Date
Public Data_Koniec As Date
Public Godzina_Start_Koniec As Integer
Public Error As Integer
Dim cnn As New ADODB.Connection
Dim rst As New ADODB.Recordset
Dim Sql_Query As String
Const Conn_String As String = "Provider=sqloledb;DRIVER={SQL Server};SERVER=MP1836SQL1;trusted_connection=yes;DATABASE=CKD_Raportowa"
'Const Tabela_Danych_SQL As String = "cod.Tabl_App_Awarie"
'Const Tabl_Danych_Grupy_Email As String = "cod.Grupy_Mailowe"
Const Tabela_Danych_SQL As String = "Aplikacja_TSUE.Tabl_App_Awarie" ' Tabela testowa
Const Tabl_Danych_Grupy_Email As String = "Aplikacja_TSUE.Grupy_Mailowe" ' Tabela testowa
Const Arkusz_Danych_EXCEL As String = "Baza_Awarie"
'''''''''''''''''''''''''''''''''''''''''''''''''''

'''''''''''''''''''''''''''''''''''''''''''''''''''
' Uruchamianie aplikacji
'''''''''''''''''''''''''''''''''''''''''''''''''''
Private Sub UserForm_Initialize()
    ' Ustawiani wartosci domyślne
    Call Wartosci_Domyslne
    ' Pobieranie nowych / odświeżonych danych do EXCEL-a z SQL Server-a
    Call Pobieranie_Danych_SQL_Server
    ' ' Procedurka odswiezająca ListBox-a z awariami
    Call Odswiezanie_ListBox
    ' Pobieranie adresów mail-owych z SQL Server-a
    Call Pobieranie_Adres_Maili_SQL_Server
    ' Odswiezanie adresow mail-owych
    Call Odswiez_Adres_Mailowych
End Sub

' Usuwanie awarii - w zasadzie to ukrywanie żeby się nie wyświetlała
Private Sub cmd_Usuwanie_Click()

' Sprawdzanie czy został wybranY jakiś rekord
If Me.txt_ID.Value = "" Then
    Exit Sub
End If

' Sprawdzanie, czy przycisk USUŃ nie zostal naciśnięty przez przypadek
' Komunikat z potwierdzeniem zamiaru usunięcia awarii
Potwierdzenie = MsgBox("Czy na pewno chcesz usunąć ten rekord?", vbYesNo + vbQuestion, "POTWIERDZENIE")
If Potwierdzenie = vbNo Then
    Exit Sub
End If

' Usuwanie danych z bazy SQL Server
Call Delete_SQL
Call Pobieranie_Danych_SQL_Server
Call Odswiezanie_ListBox

End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Zapisywanie nowych awarii / utrudnień
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Private Sub cmd_Zapisz_Nowa_Awarie_Click()

' Sprawdzanie, czy przycisk save nie zostal naciśnięty przez przypadek
If Me.opt_Awaria.Value = False And Me.opt_Utrudnienie.Value = False Then
    MsgBox "Żeby zapisać nową awarię / utrudnienie zaznacz rodzaj problemu" & vbNewLine & _
            "przycisk: Awaria lub Utrudnienie", vbCritical, "BRAK DANYCH"
    Exit Sub
End If

' Zapisywanie do SQL Servera
Call Insert_SQL
' Odświeżanie danych
Call Pobieranie_Danych_SQL_Server
' Procedurka odswiezająca ListBox-a
Call Odswiezanie_ListBox

End Sub

Private Sub cmd_Modyfikacja_Click()
    ' Update do bazy danych
    Call Update_SQL
    ' Odświeżanie danych
    Call Pobieranie_Danych_SQL_Server
    ' Procedurka odswiezająca ListBox-a z awariami
    Call Odswiezanie_ListBox
End Sub

Private Sub cmd_Tryb_Click()

' Zmiana z trybu dodawania na modyfikacje
If Me.cmd_Tryb.Caption = "TRYB DODAWANIA" Then

    If Me.txt_ID.Value = "" Then
        MsgBox "Żeby coś zmodyfikować musisz najpier wybrać jakąś awarie", vbCritical, "BRAK DANYCH"
        Exit Sub
    End If
    
    Me.cmd_Tryb.Caption = "TRYB MODYFIKACJI"
    Me.txt_Tryb.Value = 2
    Me.cmd_Zapisz_Nowa_Awarie.Enabled = True
    Me.cmd_Usuwanie.Enabled = True
    Me.img_Tryb_Insert.Visible = False
    Me.img_Tryb_Update.Visible = True
    
    Exit Sub
End If

' Zmiana z trybu modyfikacji na dodawanie
If Me.cmd_Tryb.Caption = "TRYB MODYFIKACJI" Then
    Me.cmd_Tryb.Caption = "TRYB DODAWANIA"
    Me.txt_Tryb.Value = 1
    Me.txt_ID.Value = ""
    Me.img_Tryb_Insert.Visible = True
    Me.img_Tryb_Update.Visible = False
    Me.lst_Lista_Awarii.ListIndex = -1
    Me.cmd_Modyfikacja.Enabled = False
    Me.cmd_Zapisz_Nowa_Awarie.Enabled = True
    Me.cmd_Usuwanie.Enabled = False
    
    ' Ustawianie wartości domyślnych
    Call Wartosci_Domyslne
    Exit Sub
    
End If

End Sub
' Przy zmianie wartości daty lub godziny ponownie obliczana jest długość trwania utrudnienia
Private Sub txt_Start_Date_Change2()
    Call Oblicz_Dlug_Trw_Utrud
    Me.txt_Start_Date.Value = Format(Me.txt_Start_Date2.Value, "DD-MM-YYYY")
End Sub
Private Sub txt_End_Date_Change2()
    Call Oblicz_Dlug_Trw_Utrud
    Me.txt_End_Date.Value = Format(Me.txt_End_Date2.Value, "DD-MM-YYYY")
End Sub
Private Sub txt_Start_Godz_Change()

    If Len(Me.txt_Start_Godz.Value) = 4 Then
        Me.txt_Start_Godz.Value = "0" & Me.txt_Start_Godz.Value
    End If
    
    Call Oblicz_Dlug_Trw_Utrud
    
End Sub
Private Sub txt_Koniec_Godz_Change()

    If Len(Me.txt_Koniec_Godz.Value) = 4 Then
        Me.txt_Koniec_Godz.Value = "0" & Me.txt_Koniec_Godz.Value
    End If

    Call Oblicz_Dlug_Trw_Utrud
    
End Sub

Private Sub img_StartDate_Click()

' Zmienna przechowująca date wejściową, która będzie odtwarzana w razie wystąpienia błędu
Data_Start = Me.txt_Start_Date2.Value

' ' W przyadku gdy w kalendarzu nic nie zostanie wybrane, czyli zostanie zamknięty przed wybraniem daty
On Error Resume Next
' Nowo wybrana data w standardowym formacie która będzie wykorzystywana w obliczeniach
Me.txt_Start_Date2.Value = Format(Calendar.Selected_Date(), "YYYY-MM-DD")
' Data w polskim formacie, to co się wyświetla w TextBox-ie dla użytkownika
Me.txt_Start_Date.Value = Format(Me.txt_Start_Date2.Value, "DD-MM-YYYY")
 
' Kontrola poprawności wybranej daty początkowej
Call Kontr_Data_Start(Data_Start)

' Jeśli została wpisana błędna data to powrót do daty wejściowej i koniec procedurki
If Error = 1 Then
    Exit Sub
End If

Call Oblicz_Dlug_Trw_Utrud
    
End Sub

Private Sub img_EndDate_Click()

' Zmienna przechowująca date wejściową, do której można się cofnąć
Data_Koniec = Me.txt_End_Date2.Value

' W przyadku gdy w kalendarzu nic nie zostanie wybrane, czyli zostanie zamknięty przed wybraniem daty
On Error Resume Next
' Nowo wybrana data w standardowym formacie która będzie wykorzystywana w obliczeniach
Me.txt_End_Date2.Value = Format(Calendar.Selected_Date(), "YYYY-MM-DD")
' Data w polskim formacie, to co się wyświetla w TextBox-ie dla użytkownika
Me.txt_End_Date.Value = Format(Me.txt_End_Date2.Value, "DD-MM-YYYY")

' Kontrola poprawności wybranej daty końcowej
Call Kontr_Data_Koniec(Data_Koniec)

' Jeśli została wpisana błędna data to powrót do daty wejściowej i koniec procedurki
If Error = 1 Then
    Exit Sub
End If

Call Oblicz_Dlug_Trw_Utrud

End Sub

Private Sub img_Start_Godz_Click()
    Me.txt_Czy_Godz_Start_Koniec.Value = 0
    zegar.Show
End Sub

Private Sub img_Koniec_Godz_Click()
    Me.txt_Czy_Godz_Start_Koniec.Value = 1
    zegar.Show
End Sub

Private Sub txt_End_Date2_Change()
    
    If txt_End_Date2 = "" Then
        txt_End_Date2 = Format(Data_Koniec, "DD-MM-YYYY")
    End If
    
    Call Oblicz_Dlug_Trw_Utrud
    
End Sub

Private Sub txt_Start_Date2_Change()

    If txt_Start_Date2 = "" Then
        txt_Start_Date2 = Format(Data_Start, "DD-MM-YYYY")
    End If
    
    Call Oblicz_Dlug_Trw_Utrud
    
End Sub

Sub Kontr_Data_Start(Data_Start As Date)

Dim Data_Godz_Start As Variant
Dim Data_Godz_Koniec As Variant
Data_Godz_Start = Me.txt_Start_Date2.Value & " " & Me.txt_Start_Godz.Value
Data_Godz_Koniec = Me.txt_End_Date2.Value & " " & Me.txt_Koniec_Godz.Value

'Debug.Print CDate(Data_Godz_Start, "YYYY-MM-DD hh:mm")
'Debug.Print CDate(Format(Data_Godz_Start, "YYYY-MM-DD hh:mm"))
'Debug.Print CDate(Format(Data_Godz_Koniec, "YYYY-MM-DD hh:mm"))

' Kontrola wpisywanych dat
If CDate(Data_Godz_Start) > CDate(Data_Godz_Koniec) Then
    MsgBox "Wpisana data początkowa jest póżniejsza od daty końcowej!!!" & vbCrLf _
        & "Wybierz poprawną datę", vbCritical, "BŁĘDNE DANE"
    ' Jeśli błędan data to powrót do wartości wejściowej
    Me.txt_Start_Date2.Value = Format(Data_Start, "YYYY-MM-DD")
    Me.txt_Start_Date.Value = Format(Me.txt_Start_Date2.Value, "DD-MM-YYYY")
    Error = 1
End If

End Sub

Sub Kontr_Data_Koniec(Data_Koniec As Date)

Dim Data_Godz_Start As Variant
Dim Data_Godz_Koniec As Variant
Data_Godz_Start = Me.txt_Start_Date2.Value & " " & Me.txt_Start_Godz.Value
Data_Godz_Koniec = Me.txt_End_Date2.Value & " " & Me.txt_Koniec_Godz.Value

'Debug.Print CDate(Format(Data_Godz_Start, "YYYY-MM-DD hh:mm"))
'Debug.Print CDate(Format(Data_Godz_Koniec, "YYYY-MM-DD hh:mm"))

If CDate(Data_Godz_Koniec) < CDate(Data_Godz_Start) Then
    MsgBox "Wpisana data końcowa jest wcześniejsza od daty początkowej!!!" & vbCrLf _
        & "Wybierz poprawną datę", vbCritical, "BŁĘDNE DANE"
    ' Jeśli błędan data to powrót do wartości wejściowej
    Me.txt_End_Date2.Value = Format(Data_Koniec, "YYYY-MM-DD")
    Me.txt_End_Date.Value = Format(Me.txt_End_Date2.Value, "DD-MM-YYYY")
    Error = 1
End If
    
End Sub

Private Sub Oblicz_Dlug_Trw_Utrud()

' Uzupełnianie textbox-ów w przypadku inicjalizacji aplikacji
If Me.txt_Start_Date2.Value = "" Then
    Me.txt_Start_Date2.Value = CDate(Format(Date, "YYYY-MM-DD"))
End If

If Me.txt_End_Date2.Value = "" Then
    Me.txt_End_Date2.Value = CDate(Format(Date, "YYYY-MM-DD"))
End If

If Me.txt_Start_Godz.Text = "" Then
    Me.txt_Start_Godz.Text = CStr(Mid(Now(), 12, 2)) & ":" & CStr(Mid(Now(), 15, 2))
End If

If Me.txt_Koniec_Godz.Text = "" Then
    Me.txt_Koniec_Godz.Text = CStr(Mid(Now(), 12, 2)) & ":" & CStr(Mid(Now(), 15, 2))
End If
''''''''''''''''''''''''''''''''''''''''''''''''
Dim Data_Godz_Start As Variant
Dim Data_Godz_Koniec As Variant
Dim Czas_trw_Utrud As Variant

' tworzenie z tych dat jednej zmiennej "datowej"
Data_Godz_Start = Me.txt_Start_Date2.Value & " " & Me.txt_Start_Godz.Text
Data_Godz_Koniec = Me.txt_End_Date2.Value & " " & Me.txt_Koniec_Godz.Text
  
Debug.Print Data_Godz_Start
Debug.Print Data_Godz_Koniec
  
'Czas_trw_Utrud = DateDiff("n", CDate(Data_Godz_Start), CDate(Data_Godz_Koniec))
Czas_trw_Utrud = DateDiff("n", Data_Godz_Start, Data_Godz_Koniec)

' Długość trwania utrudnienia w minutach
Me.txt_Czas_Trwania.Value = Czas_trw_Utrud

End Sub

Private Sub txt_Opis_Utrudnienia_Change()

Dim Dlugosc_Opisu As Integer
Dlugosc_Opisu = Len(Me.txt_Opis_Utrudnienia.Text)

Me.txt_Opis_Utrud_Liczba_Znak.Value = Dlugosc_Opisu
    
End Sub

Private Sub Odswiezanie_ListBox()

Dim sh As Worksheet
Dim lr As Long

Set sh = ThisWorkbook.Sheets("Baza_Awarie")
lr = Application.WorksheetFunction.CountA(sh.Range("A:A"))

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Odświeżanie listy z awariami w ListBox-ie
If lr = 1 Then lr = 2

With Me.lst_Lista_Awarii
    .ColumnCount = 14
    .ColumnHeads = True
    .ColumnWidths = "30;90;130;130;130;140;80;80;100;120;50;40;120;100"
    .RowSource = sh.Name & "!A2:N" & lr
End With

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''
' ODŚWIEŻANIE GŁÓWNEGO LISTBOX-a Z AWARIAMI
' Podwójne kliknięcie na elemencie ListBox
Private Sub lst_Lista_Awarii_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

' Oznaczanie zmiany trybu
Me.cmd_Tryb.Enabled = True
Me.cmd_Modyfikacja.Enabled = True
Me.cmd_Usuwanie.Enabled = True
Me.cmd_Tryb.Caption = "TRYB MODYFIKACJI"
Me.txt_Tryb.Value = 2
Me.img_Tryb_Insert.Visible = False
Me.img_Tryb_Update.Visible = True

' Uaktywnienie przycisku MODYFIKUJ
Me.cmd_Modyfikacja.Enabled = True
' Ukrycie przycisku zapis
Me.cmd_Zapisz_Nowa_Awarie.Enabled = False
' Wybór rekordu, jego numer identyfikacyjny w tabeli w EXCEL-u
Me.txt_ID.Value = Me.lst_Lista_Awarii.List(Me.lst_Lista_Awarii.ListIndex, 0)

'''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Czy AWARIA / UTRUDNIENIE
If Me.lst_Lista_Awarii.List(Me.lst_Lista_Awarii.ListIndex, 1) = "Awaria" Then
    Me.opt_Awaria.Value = True
    Me.opt_Utrudnienie.Value = False
Else
    Me.opt_Awaria.Value = False
    Me.opt_Utrudnienie.Value = True
End If

' Data i godzina rozpoczęcia
Me.txt_Start_Date2.Value = Format(Mid(Me.lst_Lista_Awarii.List(Me.lst_Lista_Awarii.ListIndex, 2), 1, 10), "YYYY-MM-DD")
'Me.txt_Start_Date.Value = Mid(Me.lst_Lista_Awarii.List(Me.lst_Lista_Awarii.ListIndex, 2), 1, 10)
Me.txt_Start_Date.Value = Format(Me.txt_Start_Date2.Value, "DD-MM-YYYY")
Me.txt_Start_Godz.Value = Mid(Me.lst_Lista_Awarii.List(Me.lst_Lista_Awarii.ListIndex, 2), 12, 5)

' Data i godzina zakończenia
Me.txt_End_Date2.Value = Format(Mid(Me.lst_Lista_Awarii.List(Me.lst_Lista_Awarii.ListIndex, 3), 1, 10), "YYYY-MM-DD")
'Me.txt_End_Date.Value = Mid(Me.lst_Lista_Awarii.List(Me.lst_Lista_Awarii.ListIndex, 3), 1, 10)
Me.txt_End_Date.Value = Format(Me.txt_End_Date2.Value, "DD-MM-YYYY")
Me.txt_Koniec_Godz.Value = Mid(Me.lst_Lista_Awarii.List(Me.lst_Lista_Awarii.ListIndex, 3), 12, 5)

' Opis problemu
Me.txt_Opis_Utrudnienia.Value = Me.lst_Lista_Awarii.List(Me.lst_Lista_Awarii.ListIndex, 4)
' Data ostatniej modyfikacji
Me.txt_Data_Modyf.Value = Me.lst_Lista_Awarii.List(Me.lst_Lista_Awarii.ListIndex, 7)

' Wpływ na SVL
If Me.lst_Lista_Awarii.List(Me.lst_Lista_Awarii.ListIndex, 7) = "Brak" Then
    Me.opt_Wplyw_SVL_1.Value = True
    Me.opt_Wplyw_SVL_2.Value = False
    Me.opt_Wplyw_SVL_3.Value = False
    Me.opt_Wplyw_SVL_4.Value = False
    Me.opt_Wplyw_SVL_5.Value = False
ElseIf Me.lst_Lista_Awarii.List(Me.lst_Lista_Awarii.ListIndex, 7) = "Niski" Then
    Me.opt_Wplyw_SVL_1.Value = False
    Me.opt_Wplyw_SVL_2.Value = True
    Me.opt_Wplyw_SVL_3.Value = False
    Me.opt_Wplyw_SVL_4.Value = False
    Me.opt_Wplyw_SVL_5.Value = False
ElseIf Me.lst_Lista_Awarii.List(Me.lst_Lista_Awarii.ListIndex, 7) = "Średni" Then
    Me.opt_Wplyw_SVL_1.Value = False
    Me.opt_Wplyw_SVL_2.Value = False
    Me.opt_Wplyw_SVL_3.Value = True
    Me.opt_Wplyw_SVL_4.Value = False
    Me.opt_Wplyw_SVL_5.Value = False
ElseIf Me.lst_Lista_Awarii.List(Me.lst_Lista_Awarii.ListIndex, 7) = "Znaczący" Then
    Me.opt_Wplyw_SVL_1.Value = False
    Me.opt_Wplyw_SVL_2.Value = False
    Me.opt_Wplyw_SVL_3.Value = False
    Me.opt_Wplyw_SVL_4.Value = True
    Me.opt_Wplyw_SVL_5.Value = False
ElseIf Me.lst_Lista_Awarii.List(Me.lst_Lista_Awarii.ListIndex, 7) = "Krytyczny" Then
    Me.opt_Wplyw_SVL_1.Value = False
    Me.opt_Wplyw_SVL_2.Value = False
    Me.opt_Wplyw_SVL_3.Value = False
    Me.opt_Wplyw_SVL_4.Value = False
    Me.opt_Wplyw_SVL_5.Value = True
End If

End Sub

Private Sub Wartosci_Domyslne()

' Ustawianie wartosci domyślne

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Daty wykorzystywane do obliczeń (z normalnym anglosaskim formatowaniem)
Me.txt_Start_Date2.Value = VBA.Date()
Me.txt_End_Date2.Value = VBA.Date()
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

' Daty prezentowane użytkownikowi w formularzu, w typowo polskim formacie
Me.txt_Start_Date.Value = Format(Date, "DD-MM-YYYY")
Me.txt_End_Date.Value = Format(Date, "DD-MM-YYYY")

' Generowanie aktualnych godzin jako warości domyślne
Me.txt_Start_Godz.Text = _
    CStr(Mid(Now(), 12, 2)) & ":" & CStr(Mid(Now(), 15, 2))
Me.txt_Koniec_Godz.Text = _
    CStr(Mid(Now(), 12, 2)) & ":" & CStr(Mid(Now(), 15, 2))
          
Me.txt_Opis_Utrudnienia.Value = ""
Me.txt_Opis_Utrud_Liczba_Znak.Value = 0
     
Me.txt_Uzytkownik.Value = CStr(Environ("Username"))
Me.opt_Awaria.Value = False
Me.opt_Utrudnienie.Value = False
Me.opt_Wplyw_SVL_1.Value = True

Me.cmd_Tryb.Caption = "TRYB DODAWANIA"
' wskażnik dodawania / modyfikacji nowych rekordów (1 dodawanie | 2 modyfikacja)
Me.txt_Tryb.Value = 1

Me.img_Tryb_Insert.Visible = True
Me.img_Tryb_Update.Visible = False
Me.cmd_Modyfikacja.Enabled = False
Me.cmd_Tryb.Enabled = False
Me.cmd_Modyfikacja.Enabled = False
Me.cmd_Usuwanie.Enabled = False

End Sub

Sub Execute_SQL_Query(Sql_Query As Variant)
    
    cnn.Open Conn_String
    cnn.Execute Sql_Query
    cnn.Close
        
End Sub

Private Sub Delete_SQL()

' Osoba modyfikująca
Dim Uzytkownik As String
Uzytkownik = Environ("username")

Dim SQL As Variant
SQL = "UPDATE " & Tabela_Danych_SQL & " " & _
      "SET Ukrywanie_Rekordu = 1 " & _
      ",Data_Modyfikacji = CAST(GETDATE() AS DATETIME) " & _
      ",Osoba_Modyfikacji = " & "'" & Uzytkownik & "'" & _
      " WHERE ID = " & "'" & Me.txt_ID.Value & "'"
      
Debug.Print SQL
      
Call Execute_SQL_Query(SQL)

End Sub

Private Sub Insert_SQL()

' Rodzaj problemu
Dim Rodzaj_Problemu As String
If Me.opt_Awaria.Value = True Then
    Rodzaj_Problemu = "Awaria"
Else
    Rodzaj_Problemu = "Utrudnienie"
End If

' DATY
' tworzenie z tych dat jednej zmiennej "datowej"
Dim Data_Godz_Start As Variant
Dim Data_Godz_Koniec As Variant
Data_Godz_Start = Me.txt_Start_Date2.Value & " " & Me.txt_Start_Godz.Value
Data_Godz_Koniec = Me.txt_End_Date2.Value & " " & Me.txt_Koniec_Godz.Value

' Wpływ na SVL
Dim Wplyw_na_SVL
Call SVL(Wplyw_na_SVL)

' Złoszenie na IgoZille
Dim Zgloszenie_na_Igozilli As String
If Me.opt_IgoZilla_Tak.Value = True Then
    Zgloszenie_na_Igozilli = "TAK"
Else
    Zgloszenie_na_Igozilli = "NIE"
End If

' Złoszenie na Zgloszenie_do_HD_Banku
Dim ZgLoszenie_do_HD_Banku As String
If Me.opt_IgoZilla_Tak.Value = True Then
    ZgLoszenie_do_HD_Banku = "TAK"
Else
    ZgLoszenie_do_HD_Banku = "NIE"
End If

' Osoba modyfikująca
Dim Uzytkownik As String
Uzytkownik = Environ("username")

'''''''''''''''''''''''''''''''''''''''''''''''''
' Insert do bazy danych SQL
Dim SQL As Variant
SQL = "INSERT INTO " & Tabela_Danych_SQL & "(" & _
      "Rodzaj_Problemu, Data_Godz_Rozpoczecia, Data_Godz_Zakonczenia, Opis_Problemu, Czas_Trwania_Problemu_min, Firma, Wplyw_na_SVL, Zgloszenie_na_Igozilli, Zgloszenie_do_HD_Banku, Nr_Buga, Nr_SD, Osoba_Modyfikacji) " & "VALUES('" & _
      Rodzaj_Problemu & "','" & _
      Data_Godz_Start & "','" & _
      Data_Godz_Koniec & "','" & _
      Me.txt_Opis_Utrudnienia.Value & "','" & _
      Me.txt_Czas_Trwania.Value & "','" & _
      Me.txt_Firma.Value & "', '" & _
      Wplyw_na_SVL & "','" & _
      Zgloszenie_na_Igozilli & "','" & _
      ZgLoszenie_do_HD_Banku & "','" & _
      Me.txt_nr_Buga.Value & "','" & _
      Me.txt_nr_SD.Value & "','" & _
      Uzytkownik & "')"
      
Call Execute_SQL_Query(SQL)

End Sub

Private Sub Update_SQL()

' Rodzaj problemu
Dim Rodzaj_Problemu As String
If Me.opt_Awaria.Value = True Then
    Rodzaj_Problemu = "Awaria"
Else
    Rodzaj_Problemu = "Utrudnienie"
End If

' tworzenie z tych dat jednej zmiennej "datowej"
Dim Data_Godz_Start As Variant
Dim Data_Godz_Koniec As Variant
Data_Godz_Start = Me.txt_Start_Date2.Value & " " & Me.txt_Start_Godz.Text
Data_Godz_Koniec = Me.txt_End_Date2.Value & " " & Me.txt_Koniec_Godz.Text

' Wpływ na SVL
Dim Wplyw_na_SVL
Call SVL(Wplyw_na_SVL)

' Złoszenie na IgoZille
Dim Zgloszenie_na_Igozilli As String
If Me.opt_IgoZilla_Tak.Value = True Then
    Zgloszenie_na_Igozilli = "TAK"
Else
    Zgloszenie_na_Igozilli = "NIE"
End If

' Złoszenie na Zgloszenie_do_HD_Banku
Dim ZgLoszenie_do_HD_Banku As String
If Me.opt_IgoZilla_Tak.Value = True Then
    ZgLoszenie_do_HD_Banku = "TAK"
Else
    ZgLoszenie_do_HD_Banku = "NIE"
End If

' Osoba modyfikująca
Dim Uzytkownik As String
Uzytkownik = Environ("username")

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Zapytanie modyfikujące dane
Dim SQL As Variant
SQL = "UPDATE " & Tabela_Danych_SQL & " " & _
      "SET " & _
      "Rodzaj_Problemu = " & "'" & Rodzaj_Problemu & "'" & _
      ",Data_Godz_Rozpoczecia = " & "'" & Data_Godz_Start & "'" & _
      ",Data_Godz_Zakonczenia = " & "'" & Data_Godz_Koniec & "'" & _
      ",Opis_Problemu = " & "'" & Me.txt_Opis_Utrudnienia.Value & "'" & _
      ",Czas_Trwania_Problemu_min = " & "'" & Me.txt_Czas_Trwania.Value & "'" & _
      ",Firma = " & "'" & Me.txt_Firma.Value & "'" & _
      ",Wplyw_na_SVL = " & "'" & Wplyw_na_SVL & "'" & _
      ",Zgloszenie_na_Igozilli = " & "'" & Zgloszenie_na_Igozilli & "'" & _
      ",Zgloszenie_do_HD_Banku = " & "'" & ZgLoszenie_do_HD_Banku & "'" & _
      ",Nr_Buga = " & "'" & Me.txt_nr_Buga.Value & "'" & _
      ",Nr_SD = " & "'" & Me.txt_nr_SD.Value & "'" & _
      ",Data_Modyfikacji = CAST(GETDATE() AS DATETIME)" & _
      ",Osoba_Modyfikacji = " & "'" & Uzytkownik & "' " & _
      "WHERE ID = " & "'" & Me.txt_ID.Value & "'"

Debug.Print SQL

Call Execute_SQL_Query(SQL)

End Sub

Private Function SVL(Wplyw_na_SVL) As String

' Wpływ na SVL
If Me.opt_Wplyw_SVL_1.Value = True Then
    Wplyw_na_SVL = "Brak"
ElseIf Me.opt_Wplyw_SVL_2.Value = True Then
   Wplyw_na_SVL = "Niski"
ElseIf Me.opt_Wplyw_SVL_3.Value = True Then
    Wplyw_na_SVL = "Średni"
ElseIf Me.opt_Wplyw_SVL_4.Value = True Then
    Wplyw_na_SVL = "Znaczący"
ElseIf Me.opt_Wplyw_SVL_5.Value = True Then
    Wplyw_na_SVL = "Krytyczny"
End If

End Function

Private Sub Pobieranie_Danych_SQL_Server()

Dim sh As Worksheet
Set sh = ThisWorkbook.Sheets(Arkusz_Danych_EXCEL)

Call Czyszczenie_Tabeli

' Pobieranie nowych danych
Dim Sql_Query As String
Sql_Query = "SELECT ID, Rodzaj_Problemu, Data_Godz_Rozpoczecia, Data_Godz_Zakonczenia, Opis_Problemu, Czas_Trwania_Problemu_min, Firma, Wplyw_na_SVL, Zgloszenie_na_Igozilli, ZgLoszenie_do_HD_Banku, Nr_Buga, Nr_SD, Data_Modyfikacji, Osoba_Modyfikacji" & _
            " FROM " & Tabela_Danych_SQL & _
            " WHERE Ukrywanie_Rekordu = 0 " & _
            " ORDER BY Data_Modyfikacji DESC, Osoba_Modyfikacji ASC"

'Debug.Print Sql_Query

cnn.Open Conn_String
rst.Open Sql_Query, cnn, adOpenKeyset, adLockOptimistic
sh.Range("A2").CopyFromRecordset rst

rst.Close
cnn.Close

End Sub

Private Sub Czyszczenie_Tabeli()

Dim sh As Worksheet
Set sh = ThisWorkbook.Sheets(Arkusz_Danych_EXCEL)

' Najpierw czyszczenie starej zawartości zawartości
sh.Range("A2:N100000").Clear

' Poprawa formatów danych w komórkach tabeli EXCEL-a
sh.Range("A:A").NumberFormat = "0"
sh.Range("B:B").NumberFormat = "@"
sh.Range("C:C").NumberFormat = "@"
sh.Range("D:D").NumberFormat = "@"
sh.Range("E:E").NumberFormat = "@"
sh.Range("F:F").NumberFormat = "0"
sh.Range("G:G").NumberFormat = "@"
sh.Range("H:H").NumberFormat = "@"
sh.Range("I:I").NumberFormat = "@"
sh.Range("J:J").NumberFormat = "@"
sh.Range("K:K").NumberFormat = "@"
sh.Range("L:L").NumberFormat = "@"
sh.Range("M:M").NumberFormat = "@"
sh.Range("N:N").NumberFormat = "@"

End Sub

Private Sub cmd_Pobieranie_Danych_Click()

Call Pobieranie_Danych_SQL_Server
Call Odswiezanie_ListBox

End Sub

Private Sub cmd_Raport_w_RS_Click()

Dim Link As String
Link = "https://reporting2016ccprod.bank.ad.pkobp.pl/Reports/report/COD_Raporty_PROD/Aplikacje/Aplikacja_Awarie/1_Lista_Awarii"

On Error GoTo msg
ActiveWorkbook.FollowHyperlink Address:=Link, NewWindow:=True
Exit Sub

msg:
MsgBox "Nie udało się otworzyć raportu - jakiś błąd :(", vbCritical, "BŁĄD"

End Sub

Private Sub Pobieranie_Adres_Maili_SQL_Server()

Dim sh As Worksheet
Set sh = ThisWorkbook.Sheets("Adresy_Mailowe")

'Call Czyszczenie_Tabeli
sh.Range("A2:D100").Clear

' Pobieranie nowych danych
Dim Sql_Query As String
Sql_Query = "SELECT Adres_Email ,Opis ,Data_Ostat_Modyf ,Osoba_Dokon_Ostat_Modyf " & _
            "FROM " & Tabl_Danych_Grupy_Email & " " & _
            "WHERE Ukrywanie_Rekordu <> 1 " & _
            "ORDER BY Data_Ostat_Modyf DESC"

'Debug.Print Sql_Query

cnn.Open Conn_String
rst.Open Sql_Query, cnn, adOpenKeyset, adLockOptimistic
sh.Range("A2").CopyFromRecordset rst

rst.Close
cnn.Close

End Sub

Sub Wybrane_Adr_Mailowe()

' Procedura identyfikuje adresy mail-owe, które zostaly wybrane
Dim i As Long
Dim Wybrane_Adr_Maile As String

For i = 0 To Me.lst_Lista_Adresow_Email.ListCount - 1
    If Me.lst_Lista_Adresow_Email.Selected(i) Then
        Wybrane_Adr_Maile = Wybrane_Adr_Maile & Me.lst_Lista_Adresow_Email.List(i) & "; "
    End If
Next

If Wybrane_Adr_Maile = "" Then
    MsgBox "Musisz wybrać jakiś adres mail-owy adresata", vbInformation, "BRAK ADRESU"
    Exit Sub
End If

Me.txt_Wybrane_emaile.Value = Mid(Wybrane_Adr_Maile, 1, Len(Wybrane_Adr_Maile) - 2)

End Sub

Sub Odswiez_Adres_Mailowych()

Dim sh As Worksheet
Dim lr As Long

Set sh = ThisWorkbook.Sheets("Adresy_Mailowe")
lr = Application.WorksheetFunction.CountA(sh.Range("A:A"))

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Odświeżanie listy z awariami w ListBox-ie
If lr = 1 Then lr = 2

With Me.lst_Lista_Adresow_Email
    .ColumnCount = 2
    .ColumnHeads = True
    .ColumnWidths = "140;200"
    .RowSource = sh.Name & "!A2:B" & lr
End With

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''
' WYSYŁANIE MAIL-a
''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub cmd_Wyslij_email_Click()

' Sprawdzanie, które adresy mailowe zostały wybrane i zapisywanie ich do TxtBox-a
Call Wybrane_Adr_Mailowe

' Sprawdzanie, czy jakaś awaria został już wybrana
If Me.opt_Awaria.Value = False And Me.opt_Utrudnienie.Value = False Then
    MsgBox "Żeby wysłać maila z info o nowej awarii zaznacz rodzaj problemu" & vbNewLine & _
    "lub wybierz jakąś z listy", vbCritical, "BRAK DANYCH"
    Exit Sub
End If

' Jeśli nie zostały wybrane żadne adresy mail-owe wówczas następuje anulowanie procedury
If Me.txt_Wybrane_emaile.Value = "" Then
    Exit Sub
End If

' Dane potrzebne do mail-a
''''''''''''''''''''''''''''''''''''''''''''''''''''
' Rodzaj problemu
Dim Rodzaj_Problemu As String
If Me.opt_Awaria.Value = True Then
    Rodzaj_Problemu = "Awaria"
Else
    Rodzaj_Problemu = "Utrudnienie"
End If

' tworzenie z tych dat jednej zmiennej "datowej"
Dim Data_Godz_Start As Variant
Dim Data_Godz_Koniec As Variant
Data_Godz_Start = Me.txt_Start_Date.Value & " " & Me.txt_Start_Godz.Text
Data_Godz_Koniec = Me.txt_End_Date.Value & " " & Me.txt_Koniec_Godz.Text

' Wpływ na SVL
Dim Wplyw_na_SVL
Call SVL(Wplyw_na_SVL)

' Złoszenie na IgoZille
Dim Zgloszenie_na_Igozilli As String
If Me.opt_IgoZilla_Tak.Value = True Then
    Zgloszenie_na_Igozilli = "TAK"
Else
    Zgloszenie_na_Igozilli = "NIE"
End If

' Złoszenie na Zgloszenie_do_HD_Banku
Dim ZgLoszenie_do_HD_Banku As String
If Me.opt_IgoZilla_Tak.Value = True Then
    ZgLoszenie_do_HD_Banku = "TAK"
Else
    ZgLoszenie_do_HD_Banku = "NIE"
End If

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Wysyłanie mail-a z Outlook-a
Dim OLApp As Object
Set OLApp = CreateObject("Outlook.Application")

Dim OLMail As Object
Set OLMail = OLApp.CreateItem(0)

OLApp.Session.Logon

'Mail
With OLMail
.To = Me.txt_Wybrane_emaile.Value
.CC = ""
.BCC = ""
.Subject = "UWAGA: Pojawiło się nowe utrudnienie / awaria"
.HTMLBody = "<html>" & "<head>" & "<style>" & _
"table" & ",th,td" & "{border: 1px solid black;" & "border-collapse: collapse; width: 50%;}" & _
"th, td {text-align: left;padding: 4px;}" & "tr:nth-child(even){background-color: #f2f2f2}" & _
"th {background-color: #000000;color: white;}" & _
"</style>" & "</head>" & "<body>" & _
"<h1>INFORMACJA O PROBLEMIE</h1>" & _
"<table style=width:100%" & _
"<tr>" & "<th>PROBLEM</th>" & "<th>OPIS</th>" & "</tr>" & _
"<tr>" & "<td>" & "Rodzaj problemu: " & "</td>" & "<td>" & Rodzaj_Problemu & "</td>" & "</tr>" & _
"<tr>" & "<td>" & "Planowana data i godzina rozpoczęcia: " & "</td>" & "<td>" & Data_Godz_Start & "</td>" & "</tr>" & _
"<tr>" & "<td>" & "Planowana data i godzina zakończenia: " & "</td>" & "<td>" & Data_Godz_Koniec & "</td>" & "</tr>" & _
"<tr>" & "<td>" & "Planowany czas trwania w minutach: " & "</td>" & "<td>" & Me.txt_Czas_Trwania.Value & "</td>" & "</tr>" & _
"<tr>" & "<td>" & "Opis problemu: " & "</td>" & "<td>" & Me.txt_Opis_Utrudnienia.Value & "</td>" & "</tr>" & _
"<tr>" & "<td>" & "Wpływ na SVL: " & "</td>" & "<td>" & Wplyw_na_SVL & "</td>" & "</tr>" & _
"<tr>" & "<td>" & "Zgloszenie na Igozill-e: " & "</td>" & "<td>" & Zgloszenie_na_Igozilli & "</td>" & "</tr>" & _
"<tr>" & "<td>" & "Zgloszenie do HD Banku: " & "</td>" & "<td>" & ZgLoszenie_do_HD_Banku & "</td>" & "</tr>" & _
"<tr>" & "<td>" & "Nr. Buga: " & "</td>" & "<td>" & Me.txt_nr_Buga.Value & "</td>" & "</tr>" & _
"<tr>" & "<td>" & "Nr. SD: " & "</td>" & "<td>" & Me.txt_nr_SD.Value & "</td>" & "</tr>" & _
"</table>" & "</body>" & _
"<A HREF=""https://reporting2016ccprod.bank.ad.pkobp.pl/Reports/report/COD_Raporty_PROD/Aplikacje/Aplikacja_Awarie/1_Lista_Awarii"">Wykaz wszystkich awarii / problemów TU</A>" & _
"<p>MAIL WYGENEROWANY AUTOMATYCZNIE NIE ODPOWIADAJ NA NIEGO</p>" & _
"</html>"
.Display
End With

'Memory cleanup
Set OLMail = Nothing
Set OLApp = Nothing

End Sub

Private Sub cmd_Form_Dodaw_Email_Click()
    Nowe_Emaile.Show
End Sub

Private Sub cmd_Pomoc_Tech_Click()
    Pomoc_Tech.Show
End Sub

Private Sub cmd_Zamknij_Click()
    Unload Me
End Sub



    
  



